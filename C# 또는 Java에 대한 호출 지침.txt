약한 결합 호출 설명:

모델이 학습된 후 실행 파일을 호출하여 고급 언어를 수행할 수 있습니다.
C#을 예로 들어

1. 매개변수 소개:
darknet.exe unet <train/test/preload> <데이터 파일 이름> <cfg 파일 이름> [가중치 파일 이름] [이미지 파일 이름]
위는 프로세스가 호출될 때 매개변수를 도입한 것입니다.
train은 훈련 모델, test는 인식, preload는 사전 로드된 모델, 데이터 파일 이름은 경로 구성 파일, cfg 파일 이름은 모델 구성 파일, 그 뒤에 오는 가중치(모델) 파일


2. C# 프로그래밍 구현, 먼저 비동기 프로세스 호출(*비차단*) 메서드를 사용하여 다음을 실행합니다.

Darknet 프로세스가 PRELOAD 모델을 미리 설치하게 하고 이미지를 인식하지 못하고 wdarknet_call.exe가 나중에 명령을 보낼 때까지 기다리면 한 번 인식됩니다.
목적: 로딩 시간을 절약하는 빠른 식별

"../darknet/build/darknet/x64/darknet.exe" unet preload data.txt unet++_cfg.txt 백업/unet++_cfg.backup



2. 프로그램을 이용하여 인식하고자 하는 이미지를 data.txt 파일에 지정된 TEST 디렉토리에 복사하고, 이름을 1.jpg로 지정하고, pred_1.jpg와 같은 이전 인식 결과 파일을 삭제합니다.
   그런 다음 *blocking* 메서드(동기식 프로세스 호출)를 사용하여 다음을 실행합니다.

rem #Description: 다음 명령 매개변수가 0이면 다크넷 프로세스를 종료합니다.
rem #Description: 다음 명령 매개변수가 1이면 대기 중인 다크넷 프로세스가 인식을 수행하도록 합니다(모델이 사전 설치됨).
rem #Description: darknet 프로세스는 data.txt 파일에 지정된 단일 또는 다중 TEST 디렉토리를 식별합니다.
rem # 이때 data.txt에 test_start_num=1 test_end_num=1로 설정하면 인식된 파일명은 1.jpg, 결과 파일명은 pred_1.jpg가 된다.


"../darknet/build/darknet/x64/wdarknet_call.exe" 1


rem #*차단* 호출이 종료되면 인식이 완료되며 pred_1.jpg를 읽을 수 있습니다.
rem #일괄 인식이라면 data.txt에 test_start_num=10 test_end_num=20으로 설정한 후 10.jpg, 11.jpg, 12.jpg에 파일을 복사해 주세요...
rem #최종 출력 파일은 pred_10.jpg, pred_11.jpg, pred_12.jpg...
rem #프로세스가 호출되면 이러한 cmd 호출 창을 보이지 않는 창인 sw_hide 속성으로 설정할 수 있습니다.